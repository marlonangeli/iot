name: iot-development

services:
  logi-api:
    container_name: logi-api-dev
    build:
      context: logi-api/
      dockerfile: Dockerfile
      args:
        COMMIT_HASH: ${COMMIT_HASH}
        NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    env_file:
      - development.env
    environment:
      SPRING_PROFILES_ACTIVE: development
    ports:
      - "8080:8080"

  postgres:
    container_name: iot-postgres
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongodb:
    container_name: iot-mongodb
    image: mongo:5
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb-data:/data/db

  rabbitmq:
    container_name: iot-rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  postgres-data:
    name: iot-postgres-data
  mongodb-data:
    name: iot-mongodb-data
  rabbitmq-data:
    name: iot-rabbitmq-data

networks:
  default:
    name: iot-development-network
